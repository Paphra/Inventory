extends ../layout

block content
          
  .container
    
    .row
      .col-sm-8
        include ../filter
      .col-sm-4
        button.btn.btn-success.btn-block.btn-sm(
          data-toggle='modal' data-target='#add') New Flow
        input#items(type='hidden' value=items)
      
        include ../import

      .col-sm-12
        #add.modal.fade(
          tab-index='-1' role='dialog' aria-labelby='AddNewFlow' 
          aria-hidden='true')
          if returned && returned.isImport
            - returned = false

          .modal-dialog(role='document')
            .modal-content
              - let url = (returned?returned.url:'')
              form(action=(url?url:'/flows'), method="post")
                .modal-header
                  h4.modal-title #{returned?'Update': 'Add New'} Stock Item Flow
                  button.close(type='button' data-dismiss='modal' aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                  .errors
                      if returned
                        if returned.errors
                          ul
                            each err in returned.errors
                              li= err.msg
                  .form-group
                    label(for="item") Item
                    select#item.form-control(
                      placeholder='Select a An Item' name='item'
                      required='true' onChange="setQuantity()")
                      option(value="") -- Item --
                      each item in items
                        option(value=item._id
                          selected=(returned?returned.item.toString()===item._id.toString():false)
                          ) #{item.name}
                      else
                        option(value="") No Items

                  .form-group
                    .row
                      .col-sm-6
                        label(for="handled_by") Taken/Returned By 
                        input#handled_by.form-control(name="handled_by"
                          type="text" placeholder="Full Name" required=true
                          value=(returned?returned.handled_by:''))

                      .col-sm-6
                        label(for="branch") Branch
                        select#branch.form-control(
                          placeholder='Select a Branch' name='branch'
                          required='true')
                          option(value="") -- Branch --
                          each branch in branches
                            option(value=branch._id
                              selected=(returned?returned.branch.toString()===branch._id.toString():false)
                              ) #{branch.name}
                          else
                            option(value="") No Branches

                  input#entered_by(
                    type='hidden' value=user._id required=true name='entered_by')
                 
                  .form-group
                    .row
                      .col-sm-6
                        label(for="quantity") Quantity
                        input#quantity.form-control(
                          type='number' placeholder='Quantity' min='0'
                          required='true' name='quantity'
                          value=(returned?returned.quantity:''))
                      .col-sm-6
                        label(for="action") Action/Procedure
                        select#action.form-control(
                          placeholder='Select an Action' name='action'
                          required='true')
                          option(value="") -- Action --
                          option(value="Sold" 
                            selected=(returned?returned.action==='Sold':false)) Sold
                          option(value="Rented" 
                            selected=(returned?returned.action==='Rented':false)) Rented
                          option(value="Used" 
                            selected=(returned?returned.action==='Used':false)) Used
                          option(value="Purchased" 
                            selected=(returned?returned.action==='Purchased':false)) Purchased
                          option(value="Returned In" 
                            selected=(returned?returned.action==='Returned In':false)) Returned In
                          option(value="Returned Out" 
                            selected=(returned?returned.action==='Returned Out':false)) Returned Out
                  
                  .form-group
                    label(for="amount") Amount [If Any]
                    input#amount.form-control(
                      type='number' placeholder='Enter Amount'
                      requird='true' name='amount' 
                      value=(returned?returned.amount:''))

                  .form-group
                    .row
                      .col-sm-6
                        label(for="quality") Quality
                        select#quality.form-control(
                          name="quality" placeholder='Select Quality' 
                          required='true')
                          option(value="") -- Quality --
                          option(value="Excellent"
                            selected=(returned?returned.quality==='Excellent':false)) Excellent
                          option(value="Good"
                            selected=(returned?returned.quality==='Good':false)) Good
                          option(value="Fair"
                            selected=(returned?returned.quality==='Fair':false)) Fair
                          option(value="Poor"
                            selected=(returned?returned.quality==='Poor':false)) Poor
                    
                      .col-sm-6
                        label(for="entry_date") Entry Date
                        if returned
                          - let dt = returned.entry_date
                          - let y = dt.getFullYear()
                          - let m = (dt.getMonth()+1+'').padStart(2, '0')
                          - let d = (dt.getDate()+'').padStart(2,'0')
                          input#entry_date.form-control(
                            type="date" name='entry_date' required=true 
                            value=(y+ '-' + m + '-' + d))
                        else
                          input#entry_date.form-control(
                            type="date" name='entry_date' required=true)
                  
                  .form-group
                    label(for="details") Details
                    textarea#details.form-control(
                      name="details", rows="3" required='true' 
                      placeholder='Enter the Details of the Stock Item') #{returned?returned.details:''}

                .modal-footer
                  button.btn.btn-success(type='submit') Save 
                  button.btn.btn-danger(type='button' data-dismiss='modal') Close
    
    hr
  
  .bg-white.shadow
    table#table.table.table-compressed.table-bordered(
      data-toggle="table"
      data-search="true"
      data-trim-on-search='false'
      data-show-columns="true"
      data-show-columns-search='true'
      data-show-columns-toggle-all='true'
      data-show-print='true'
      data-show-export='true'
      data-sort-class="table-active"
      data-sortable="true"
      data-pagination="true"
      data-show-pagination-switch='true'
      data-page-number="1"
      data-show-toggle='true'
      data-show-fullscreen='true'
      data-page-list="[10, 25, 50, 100, 200, All]"
      data-width='100%')

      thead
        tr
          th(data-field='id' data-sortable='true') Date
          th(data-field='item' data-sortable='true') Item
          th(data-field='handled_by') Taken/Returned By
          th(data-field='qtty' data-sortable='true') Qtty
          th(data-field='amount' data-sortable='true') Amount
          th(data-field='details') Details
          th(data-field='action')  Action
          th(data-field='branch') Branch
          th Actions
      tbody
        if flows.length
          each flow in flows
            tr
              td #{flow.entry_date_formated}
              td #{flow.item.name}
              th #{flow.handled_by}
              th #{flow.quantity}
              th #{flow.amount}
              th #{flow.details}
              th #{flow.action}
              th #{flow.branch.name}
              td
                if user.admin || user._id.toString() === flow.entered_by._id.toString()
                  span.btn.btn-primary.btn-sm(
                    data-target='#edit_' + flow._id data-toggle='modal')
                    i.fas.fa-edit
                span.btn.btn-success.btn-sm(
                  data-target='#view_' + flow._id data-toggle='modal')
                  i.fas.fa-eye
                if user.admin
                  span.btn.btn-danger.btn-sm(
                    data-target='#delete_' + flow._id data-toggle='modal')
                    i.fas.fa-trash
          
              // editing
              .modal.fade(id='edit_'+flow._id
                tab-index='-1' role='dialog' aria-labelby='EditFlow' 
                aria-hidden='true')
                
                .modal-dialog(role='document')
                  .modal-content
                    form(action=flow.url, method="post")
                      .modal-header
                        h4.modal-title Edit Stock Flow
                        button.close(type='button' data-dismiss='modal' aria-label='Close')
                          span(aria-hidden='true') &times;
                      .modal-body
                        .form-group
                          label(for="item") Item
                          select#item.form-control(
                            placeholder='Select a An Item' name='item'
                            required='true')
                            option(value="") -- Item --
                            each item in items
                              option(value=item._id
                                selected=(flow.item._id.toString()===item._id.toString())
                                ) #{item.name}
                            else
                              option(value="") No Items

                        .form-group
                          .row
                            .col-sm-6
                              label(for="handled_by") Taken/Returned By 
                              input#handled_by.form-control(name="handled_by"
                                type="text" placeholder="Full Name" required=true
                                value=flow.handled_by)
                              
                            .col-sm-6
                              label(for="branch") Branch
                              select#branch.form-control(
                                placeholder='Select a Branch' name='branch'
                                required='true')
                                option(value="") -- Branch --
                                each branch in branches
                                  option(value=branch._id
                                    selected=(flow.branch._id.toString()===branch._id.toString())
                                    ) #{branch.name}
                                else
                                  option(value="") No Branches

                        input#entered_by(
                          type='hidden' value=user._id required=true name='entered_by')
                      
                        .form-group
                          .row
                            .col-sm-6
                              label(for="quantity") Quantity
                              input#quantity.form-control(
                                type='number' placeholder='Quantity' min='0'
                                required='true' name='quantity' value=flow.quantity)

                            .col-sm-6
                              label(for="action") Action/Procedure
                              select#action.form-control(
                                placeholder='Select an Action' name='action'
                                required='true')
                                option(value="") -- Action --
                                option(value="Sold" 
                                  selected=(flow.action==='Sold')) Sold
                                option(value="Rented" 
                                  selected=(flow.action==='Rented')) Rented
                                option(value="Used" 
                                  selected=(flow.action==='Used')) Used
                                option(value="Purchased" 
                                  selected=(flow.action==='Purchased')) Purchased
                                option(value="Returned In" 
                                  selected=(flow.action==='Returned In')) Returned In
                                option(value="Returned Out" 
                                  selected=(flow.action==='Returned Out')) Returned Out
                        
                        .form-group
                          label(for="amount") Amount [If Any]
                          input#amount.form-control(
                            type='number' placeholder='Enter Amount'
                            requird='true' name='amount' 
                            value=flow.amount)

                        .form-group
                          .row
                            .col-sm-6
                              label(for="quality") Quality
                              select#quality.form-control(
                                name="quality" placeholder='Select Quality' 
                                required='true')
                                option(value="") -- Quality --
                                option(value="Excellent"
                                  selected=(flow.quality==='Excellent')) Excellent
                                option(value="Good"
                                  selected=(flow.quality==='Good')) Good
                                option(value="Fair"
                                  selected=(flow.quality==='Fair')) Fair
                                option(value="Poor"
                                  selected=(flow.quality==='Poor')) Poor
                          
                            .col-sm-6
                              - let dt = flow.entry_date
                              - let y = dt.getFullYear()
                              - let m = (dt.getMonth()+1+'').padStart(2, '0')
                              - let d = (dt.getDate()+'').padStart(2,'0')
                              label(for="entry_date") Entry Date
                              input#entry_date.form-control(placeholder='Enter Entry Date'
                                type="date" name='entry_date' required=true 
                                value=y + '-' + m + '-' + d)
                                
                        .form-group
                          label(for="details") Details
                          textarea#details.form-control(
                            name="details", rows="3" required='true' 
                            placeholder='Enter the Details of the Stock Item') #{flow.details}

                      .modal-footer
                        button.btn.btn-success(type='submit') Save 
                        button.btn.btn-danger(type='button' data-dismiss='modal') Close

              // view details
              .modal.fade( id='view_' + flow._id
                tab-index='-1' role='dialog' aria-labelby='ViewItem' 
                aria-hidden='true')
                .modal-dialog(role='document')
                  .modal-content
                    .modal-header
                      h4.modal-title Item Details
                      button.close(type='button' data-dismiss='modal' aria-label='Close')
                        span(aria-hidden='true') &times;
                    .modal-body

                      h4.text-center #[strong Item]
                      .row
                        .col-2.text-right #[strong Item:]
                        .col-4 #{flow.item.name}
                        .col-2.text-right #[strong Status:]
                        .col-4 #{flow.item.status}
                      .row
                        - let brd = {}
                        - let cat = {}
                        - let sup = {}
                        each brand in brands
                          if brand._id.toString()===flow.item.brand.toString()
                            -brd = brand
                        each caty in categories
                          if caty._id.toString()===flow.item.category.toString()
                            -cat = caty
                        each supr in suppliers
                          if supr._id.toString()===flow.item.supplier.toString()
                            -sup = supr
                        .col-2.text-right #[strong Brand:]
                        .col-4 #{brd.name}
                        .col-2.text-right #[strong Color:]
                        .col-4 #{flow.item.color}
                      .row
                        .col-2.text-right #[strong Category:]
                        .col-4 #{cat.name}
                        .col-2.text-right #[strong Supplier:]
                        .col-4 #{sup.name}
                      hr
                      .row
                        .col-2.text-right #[strong Description:]
                        .col-10 #{flow.item.description}
                      
                      hr
                      h4.text-center #[strong Flow Details]
                      .row
                        .col-3.text-right #[strong Taken/Returned By:]
                        .col-3 #{flow.handled_by}
                        .col-3.text-right #[strong Entered By:]
                        .col-3 #{flow.entered_by.name}
                      .row
                        .col-3.text-right #[strong Quantity:]
                        .col-3 #{flow.quantity}
                        .col-3.text-right #[strong Action:]
                        .col-3 #{flow.action}
                      
                      hr
                      .row
                        .col-3.text-right #[strong Amount:]
                        .col-9 #{flow.amount}
                      .row
                        .col-3.text-right #[strong Details:]
                        .col-9 #{flow.details}

                    .modal-footer
                      button.btn.btn-primary(type='button' data-dismiss='modal') Close

              // deleting
              .modal.fade( id='delete_' + flow._id
                tab-index='-1' role='dialog' aria-labelby='DeleteItem' 
                aria-hidden='true')
                .modal-dialog(role='document')
                  .modal-content
                    form(action=flow.url + '/delete', method="post")
                      .modal-header
                        h4.modal-title Delete Stock Flow of: #{flow.item.name}
                        button.close(type='button' data-dismiss='modal' aria-label='Close')
                          span(aria-hidden='true') &times;
                      .modal-body
                        input#flowid.form-control(
                          type="hidden" name='flowid' required='true'
                          value=flow._id)
                        .row
                          .col-sm-4.text-right #[strong Carried Out On:] 
                          .col-sm-8 #{flow.entry_date_formated}
                        .row
                          .col-sm-4.text-right #[strong Details:] 
                          .col-sm-8 #{flow.details}

                      .modal-footer
                        button.btn.btn-danger(type='submit') Delete
                        button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel

block scripts
  script.
    var items = JSON.parse(document.getElementById('items').value);

    function setQuantity(id=''){
      var el_item = document.getElementById('item'+id);
      var el_quantity = document.getElementById('quantity'+id);
      var selected_item_id = el_item.value;
      
      for(item of items){
        if(item._id.toString() == selected_item_id){
          el_quantity.max = item.quantity;
          
        }
      }
    }